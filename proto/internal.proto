syntax = "proto3";
package dragonradio.internal;

message TimeStamp {
    int32 seconds = 1; // seconds since 1970
    int64 picoseconds = 2; // fractional portion of the time, in picoseconds
}

message Location {
    double latitude = 1; // latitude in degrees
    double longitude = 2; // longitude in degrees
    double elevation = 3; // meters above sea level
}

message LocationInfo {
    Location location = 1;   // Location of the node
    TimeStamp timestamp = 2; // Time of measurement
}

// Flow info
message FlowInfo {
    uint32 flow_uid = 1;   // Flow identifier
    uint32 src = 2;        // Node id of the source
    uint32 dest = 3;       // Node id of the destination
    double window = 4;     // Statistics measurement window (sec)
    double latency = 5;    // Mean latency (sec)
    double throughput = 6; // Throughpout (bps)
    uint64 bytes = 7;      // Total bytes
}

message Status {
    uint32 radio_id = 1;                // Node id
    TimeStamp timestamp = 2;            // Time of measurement
    LocationInfo loc = 3;               // Node location
    repeated FlowInfo source_flows = 4; // Flows for which node is source
    repeated FlowInfo sink_flows = 5;   // Flows for which node is source
}

message Schedule {
    uint32 seq = 1;                             // Schedule sequence number
    uint32 nchannels = 2;                       // Number of channels
    uint32 nslots = 3;                          // Number of time slots
    repeated uint32 nodes = 4 [packed=true];    // Nodes in schedule
    repeated uint32 schedule = 5 [packed=true]; // Schedule consisting of nchannels*nslots node ID's
}

message Message {
    oneof payload {
        Status status = 1;
        Schedule schedule = 2;
    }
}
